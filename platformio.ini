; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = src
build_cache_dir = .pio/.cache
default_envs = 
  8266_thermostat_release_ota
  32_thermostat

; ========================================================
[common]
framework = arduino
extra_scripts = 
  pre:build_number.py
  post:move_version_file.py
lib_deps = 
  BME280
  256dpi/MQTT @ ^2.5.2
  beegee-tokyo/DHT sensor library for ESPx @ ^1.19
  thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays @ ^4.5.0
  bblanchon/ArduinoJson @ ^6.21.3
  thomasfredericks/Bounce2 @ ^2.71

; ========================================================
[esp8266]
framework = ${common.framework}
platform =  espressif8266
board = esp07
board_build.flash_mode = dout
board_build.f_cpu = 80000000L
board_build.f_flash = 40000000L
board_build.ldscript = eagle.flash.1m64.ld
extra_scripts = 
  ${common.extra_scripts}
board_build.filesystem = littlefs
build_flags = 
  -mtarget-align
  -Wall
  -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
  ; -D VTABLES_IN_IRAM
  ; -D VTABLES_IN_FLASH
  -D CFG_BOARD_ESP8266=1
  -D DEBUG_ESP_PORT=Serial
  -D BEARSSL_SSL_BASIC
  -D ATOMIC_FS_UPDATE
  -D _GNU_SOURCE
monitor_speed = 115200
monitor_port = COM7
monitor_filters = time, esp8266_exception_decoder, colorize
upload_resetmethod = ck

; ========================================================
[env:8266_thermostat_release_ota]
extends = esp8266
extra_scripts =
  ${common.extra_scripts}
  post:compress_firmware.py
lib_deps = ${common.lib_deps}
upload_protocol = espota
; upload_port = prototype.local ;192.168.178.137
upload_port = thermostat-buero.internal
; upload_port = 192.168.178.32 ;wohnzimmer.local
; upload_port = 192.168.178.34 ;kinderzimmer_1.local
; upload_port = 192.168.178.35 ;kinderzimmer_2.local

; ========================================================
[env:8266_thermostat_debug_ota]
extends = esp8266
; build_type = debug
extra_scripts = 
  ${common.extra_scripts}
  post:compress_firmware.py
build_flags =
  ${esp8266.build_flags}
  -fexceptions
  -D CFG_DEBUG
  -D CFG_DEBUG_DISPLAY_VERSION
  -DPIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
  ; -D CFG_DEBUG_QUICKSORT
  ; -DCFG_DEBUG_SENSOR_VALUES
  ; -DCFG_DEBUG_SNTP
lib_deps = ${common.lib_deps}
upload_protocol = espota
upload_port = prototype.local ;192.168.178.137
; upload_port = buero.local ;192.168.178.31
; upload_port = 192.168.178.32 ;wohnzimmer.local
; upload_port = 192.168.178.34 ;kinderzimmer_1.local

; ========================================================
[env:8266_thermostat_debug_serial]
extends = esp8266
; build_type = debug
build_flags =
  ${esp8266.build_flags}
  -D CFG_DEBUG
  -D CFG_DEBUG_DISPLAY_VERSION
  ; -D CFG_DEBUG_QUICKSORT
  ; -DCFG_DEBUG_SENSOR_VALUES
  ; -D CFG_DEBUG_SNTP
  -fexceptions
  -DPIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
lib_deps = ${common.lib_deps}
upload_protocol = esptool
upload_speed = 115200
upload_port = COM7

; ========================================================
; ESP 32
; ========================================================
[esp32]
framework = ${common.framework}
platform = espressif32
board = az-delivery-devkit-v4
; board = lolin_d32_pro

build_flags =
  -Wall
  -D CFG_BOARD_ESP32
  ; -D DEBUG_ESP_PORT=Serial
extra_scripts = ${common.extra_scripts}
monitor_speed = 115200
monitor_port = COM3
monitor_filters = time, esp32_exception_decoder
; upload_protocol = esp-prog
upload_speed = 115200
upload_resetmethod = ck
; upload_protocol = esptool
; upload_port = COM3

upload_protocol = espota
upload_flags =
  --port=8266
upload_port = 192.168.178.120  ;ESP32 (WROOM)
; upload_port = 192.168.178.121  ;ESP32 (WROVER)
; test_build_project_src = yes

[env:32_thermostat]
extends = esp32
lib_deps = ${common.lib_deps}
build_flags = ${esp32.build_flags}

[env:32_thermostat_debug]
extends = esp32
build_type = debug
debug_tool = esp-prog
; debug_init_break = tbreak setup
build_flags =
  ${env:32_thermostat.build_flags}
  -DCFG_DEBUG
  -DCFG_DEBUG_DISPLAY_VERSION
  ; -DCFG_DEBUG_SENSOR_VALUES
  -DCFG_DEBUG_SNTP
; debug_build_flags = -O0 -ggdb3 -g3
lib_deps = ${common.lib_deps}
